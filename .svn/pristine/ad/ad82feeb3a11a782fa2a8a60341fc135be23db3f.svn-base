using System;
using System.Drawing;
using GDIDrawer;
using System.IO;

namespace Lab4
{
    class Program
    {
        static void Main(string[] args)
        {
            string secret = "mouse";
            int wrong;
            char guess;
            string guessed;
            string rerun;
            int index;
            int success;
            char[] word = new char[secret.Length];


            do
            {
                //reset variables
                Console.Clear();
                wrong = 0;
                guessed = "";
                success = 0;

                //name and title
                Console.WriteLine("\t\t\t\tBerton Quon - Lab 4");

                //load file with strings
                for (index = 0; index < secret.Length; index++)     //assign dashes to each char in hangman word
                    word[index] = char.Parse("-");
            
                //create GDI drawer window and background image of hangman
                CDrawer canvas = new CDrawer();
                DrawScreen(ref canvas, ref guessed);

                //while loop until success or fail 
                do
                {
                    //ask user to enter a letter
                    GetGuess(ref canvas, out guess, ref guessed);

                    //check to ensure valid letter and not previously played
                    CheckGuess(ref guess, ref guessed, ref wrong, ref secret, word, ref success);
                    
                    //add to hangman drawing if wrong
                    WrongGuess(ref canvas, ref wrong);
                } while ((wrong < 6) && (success < secret.Length));     //continue asking for letters until game lost or won

                if (success == secret.Length)       //if win
                    Console.WriteLine("You win!");

                //ask user to rerun program
                Console.Write("\nWould you like to play again? Yes/No: ");
                rerun = Console.ReadLine().ToLower();
                if (rerun == "yes")
                    canvas.Close();      //close canvas
                
            } while (rerun == "yes");       //replay hangman

        }
        static private void DrawScreen(ref CDrawer canvas, ref string guessed)
        {
            //add background image
            canvas.AddLine(300, 100, 300, 450, Color.Aqua, 5);
            canvas.AddLine(300, 125, 450, 125, Color.Aqua, 5);
            canvas.AddLine(300, 150, 325, 125, Color.Aqua, 5);
            canvas.AddLine(300, 400, 500, 400, Color.Aqua, 5);
            canvas.AddLine(300, 410, 475, 440, Color.Aqua, 5);
            canvas.AddLine(300, 440, 475, 410, Color.Aqua, 5);
            canvas.AddLine(475, 400, 475, 450, Color.Aqua, 5);
            canvas.AddLine(400, 125, 400, 175, Color.Brown, 3);
        }

        static private void GetGuess(ref CDrawer canvas, out char guess, ref string guessed)
        {
            bool retry;
            bool inputWrong;
            string input;
            
            do
            {
                retry = false;

                Console.Write("\nGuess a letter: ");
                input = Console.ReadLine();
                inputWrong = char.TryParse(input, out guess); //ensure only a single character was inputted
                while (!char.IsLetter(guess))      //check if input was a letter
                {
                    Console.WriteLine("The character you entered is not a letter.");
                    Console.Write("\nGuess a letter: ");
                    guess = char.Parse(Console.ReadLine());
                }
                foreach (char c in guessed)     //check if letter has already been guessed
                {
                    if (c == guess)
                    {
                        Console.WriteLine("The letter you have entered has already been selected.");
                        retry = true;
                    }
                }
            }
            while (retry);           //loop request for letter until valid, new letter is entered 
            guessed = guessed + guess;          //update list of letters used
            Console.WriteLine($"Letters used: {guessed}");
            //canvas.AddText($"Letters used: {guessed}", 15, 0, 40, 500, 30, Color.White);
            
        }
        static private void CheckGuess(ref char guess, ref string guessed, ref int wrong, ref string secret, char[] word, ref int success)
        {
            bool found = false;     //bool indicating letter is found
            int index = 0;          //index to change displayed characters
            int wordIndex;          //index to display hangman word
            foreach (char s in secret)
            {
                if (s == guess)
                {
                    //display letter in word
                    word[index] = s;
                    found = true;
                    success++;
                }
                index++;
            }
            if (!found)
            {
                Console.WriteLine($"'{guess}' is not in the word.");
                wrong++; //add to wrong counter - determines what part of hangman to draw
            }
            Console.Write($"Hangman word: ");
            for (wordIndex = 0; wordIndex < secret.Length; wordIndex++)
            {
                Console.Write($"{word[wordIndex]}");
            }
            Console.WriteLine();

        }
        static private void WrongGuess(ref CDrawer canvas, ref int wrong)
        {
            //draw appropriate part of hangman depending on how many wrong letters have been chosen 
            if (wrong == 1)
                canvas.AddCenteredEllipse(400, 185, 20, 20, Color.Yellow);      //head
            if (wrong == 2)
                canvas.AddCenteredEllipse(400, 230, 20, 70, Color.Yellow);      //body
            if (wrong == 3)
                canvas.AddLine(390, 210, 370, 230, Color.Yellow, 3);            //arm
            if (wrong == 4)
                canvas.AddLine(410, 210, 430, 230, Color.Yellow, 3);            //arm
            if (wrong == 5)
                canvas.AddLine(390, 250, 390, 290, Color.Yellow, 3);            //leg
            if (wrong == 6)
            {
                canvas.AddLine(410, 250, 410, 290, Color.Yellow, 3);            //leg
                canvas.AddText("You Lose!", 80, Color.Blue);
                Console.WriteLine("You lose.");
            }
        }
    }
}
